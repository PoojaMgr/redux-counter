{"version":3,"sources":["App.js","actions/index.js","reportWebVitals.js","reducers/upDown.js","reducers/index.js","store.js","index.js"],"names":["App","myState","useSelector","state","changeNumber","dispatch","useDispatch","className","title","onClick","type","value","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","changeNumberReducer","action","rootReducer","combineReducers","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","subscribe","console","log","getState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sNAuBeA,MAnBf,WACE,IAAMC,EAAUC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,gBACrCC,EAAWC,cAEjB,OACE,mCACA,sBAAKC,UAAU,YAAf,UACE,6DACA,uDACA,sBAAKA,UAAU,WAAf,UACE,wBAAQA,UAAU,kBAAkBC,MAAM,YAAYC,QAAS,kBAAMJ,ECNlE,CACHK,KAAM,eDKN,SAA4F,uCAC5F,uBAAOA,KAAK,OAAOH,UAAU,kBAAkBI,MAAOV,IACtD,wBAAQM,UAAU,iBAAiBC,MAAM,YAAYC,QAAS,kBAAMJ,ECdjE,CACHK,KAAM,eDaN,SAA2F,gDEJpFE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,OCICQ,EARa,WAAiC,IAAhClB,EAA+B,uDAFzC,EAE8BmB,EAAW,uCAExD,OAAOA,EAAOZ,MACV,IAAK,YAAa,OAAOP,EAAM,EAC/B,IAAK,YAAa,OAAOA,EAAM,EAC/B,QAAS,OAAOA,ICDRoB,EAJKC,YAAgB,CAChCpB,aAAciB,ICCJI,EAFDC,YAAYH,EAAaI,OAAOC,8BAAgCD,OAAOC,gCCKrFH,EAAMI,WAAU,kBAAKC,QAAQC,IAAIN,EAAMO,eAEvCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUV,MAAOA,EAAjB,SACA,cAAC,EAAD,QAGFW,SAASC,eAAe,SAM1BzB,M","file":"static/js/main.23c907fe.chunk.js","sourcesContent":["import './App.css';\nimport {useSelector, useDispatch } from \"react-redux\";\nimport { incNumber, decNumber} from \"./actions/index\";\n\nfunction App() {\n  const myState = useSelector(state => state.changeNumber);\n  const dispatch = useDispatch();\n\n  return (\n    <>\n    <div className=\"container\">\n      <h1>Increment/Decrement Counter</h1>\n      <h4>using React and Redux</h4>\n      <div className=\"quantity\">\n        <button className=\"quantity__minus\" title=\"Decrement\" onClick={() => dispatch(decNumber())}><span>-</span></button>\n        <input type=\"text\" className=\"quantity__input\" value={myState}/>\n        <button className=\"quantity__plus\" title=\"Increment\" onClick={() => dispatch(incNumber())}><span>+</span></button>\n      </div>\n    </div>\n    </>\n  );\n}\n\nexport default App;\n","export const incNumber = () => {\n    debugger\n    return {\n        type: \"INCREMENT\"\n    }\n}\n\nexport const decNumber = () => {\n    return {\n        type: \"DECREMENT\"\n    }\n}\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","\nconst initialState=0;\n\nconst changeNumberReducer = (state=initialState, action) => {\n  debugger\n    switch(action.type){\n        case \"INCREMENT\": return state+1;\n        case \"DECREMENT\": return state-1;\n        default: return state;  \n  }\n}\nexport default changeNumberReducer;\n","import changeNumberReducer from './upDown';\n import { combineReducers } from \"redux\";\n\n const rootReducer = combineReducers({\n     changeNumber: changeNumberReducer\n })\n\n export default rootReducer;","import { createStore } from 'redux';\nimport rootReducer from './reducers/index';\n\nconst store = createStore(rootReducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './store';\nimport { Provider } from 'react-redux';\n\nstore.subscribe(()=> console.log(store.getState()))\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n    <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analym\nreportWebVitals()"],"sourceRoot":""}